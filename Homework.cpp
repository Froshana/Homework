 // Завдання 1 //

Теоретично максимальна кількість елементів у зв'язному спіску може бути необмежаною, бо немає фіксованого розміру
На практці кількість обмежується оперативною пам'яттю, розрядність систем (34бітна програма обмежана десь 4 гб памяті, 64бітна - терабайтом)
Типом вузла - чим більше вузол має данних, тим більше він займає пам'яті
Операційною системою - видає помилку, якщо не вистачає пам'яті

  // Завдання 2 //

У зв'язному списку можна використовувати індекси,але це не дуже має сенс через неефективність
Бо буде повільний доступ, вузли будуть розкидані по пам'яті, з показжчиками, не має прямого доступу
Щоб отримати елемент за індексом у зв'язаному списку потрібно буде рухатися по списку вручну
Зв'язний список насправді не має справжніх індексов - це все рахується вручну

   // Завдання 3 //

 Останній символ у рядку "Сергій - хороший хлопець" - це ь
 Перевіремо */
#include <iostream>
#include <string>
using namespace std;

int main(){
	string text = "Сергій - хороший хлопець";
	char lastChar = text[text.length() - 1];
	cout << "Останній символ : " << lastChar << endl;
}

    // Завдання 4 //

class Node{
	public:
		int data;
		Node* next;

		Node(int value){
			data = value;
			next = nullptr;
		}
};

int main(){
	Node* first = new Node(10);
	Node* second = new Node(20);
	first -> next = second;

	cout << "" << first->data << endl;
	cout << "" << first->next->data << endl;

	delete first;
	delete second;

	return 0;
}