// –ó–∞–≤–¥–∞–Ω–Ω—è 1-2 //
#include <iostream>
using namespace std;

class Rocket {
 public:
	Rocket(double m, double f) : mass(m), fuelAmount(f){}

	void Setmass (double m) { mass = m;}
	void SetFuel (double f) {fuelAmount = f;}

	double GetMass() const {return mass;}
	double GetFuel() const {return fuelAmount;}

	virtual void Start() {
		if (fuelAmount > 0) 
			cout << "–†–∞–∫–µ—Ç–∞ —Å—Ç–∞—Ä—Ç—É—î üöÄ\n";
		else
			cout << "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–∞–ª–∏–≤–∞\n";
		}
	
	virtual ~Rocket() = default;

 private:
	double mass;
	double fuelAmount;
};

class Airplane{
 public:
	
 Airplane (double s, double a) : speed(s), altitude(a){}

 void SetSpeed(double s){speed = s;}
 void SetAltitude(double a){ altitude = a;}

 double GetSpeed() const {return speed;}
 double GetAltitude() const {return altitude;}

 private:
	double speed;
	double altitude;
};

class Jetplane : public Rocket, public Airplane {
 public:
	Jetplane(double m, double f, double s, double a)
	: Rocket(m,f), Airplane(s,a){}

	void Start() override {
		if (GetFuel() > 0 && GetSpeed() > 0 && GetAltitude() >= 0) {
			cout << "Jetplane —Å—Ç–∞—Ä—Ç—É—î üõ´\n";
			cout << "–®–≤–∏–¥–∫—ñ—Å—Ç—å:" << GetSpeed() << "\n–º/—Å\n";
			cout << "–í–∏—Å–æ—Ç–∞: "<< GetAltitude() << "\n–º\n";
		} else {
			cout << "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–∞–ª–∏–≤–∞ –∞–±–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ\n";
		}
	}
	
};
/*
int main() {
	double mass, fuel, speed, altitude;
	cout << "–í–≤–µ–¥—ñ—Ç—å –º–∞—Å—É üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞:\n";
	cin >> mass;

	cout << "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–ª–∏–≤–∞ üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞ :\n";
	cin >> fuel;

	cout << "–í–≤–µ–¥—ñ—Ç—å —à–≤–∏–¥–∫—ñ—Å—Ç—åüõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞ :\n";
	cin >> speed;

	cout << "–í–≤–µ–¥—ñ—Ç—å –≤–∏—Å–æ—Ç—É üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞ :\n";
	cin >> altitude;

	Jetplane jp(mass, fuel, speed, altitude);
	jp.Start();

	return 0;
} */

class Boeing747 : public Jetplane {
 public:
	Boeing747(double m, double f, double s, double a, int passengers)
		: Jetplane(m,f,s,a), passengerCount(passengers) {}

	void BoardPassengers (int count) {
		passengerCount += count;
		cout << "–ù–∞ –ª—ñ—Ç–∞–∫ —Å—ñ–ª–æ " <<count << " –ø–∞—Å–∞–∂–∏—Ä—ñ–≤. –í—Å–æ–≥–æ: \n" << passengerCount;
	}

	void Start() override {
		if (GetFuel() > 0 && GetSpeed() > 0 && GetAltitude() >= 0 && passengerCount > 0) {
			cout << "Boeing747 –∑ " << passengerCount << " –ø–∞—Å–∞–∂–∏—Ä–∞–º–∏ –≤–∑–ª—ñ—Ç–∞—î üõ´\n";
		} else {
			cout << "Boeing747 –Ω–µ –º–æ–∂–µ —Å—Ç–∞—Ä—É–≤–∞—Ç–∏. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ª–∏–≤–æ, –≤–∏—Å–æ—Ç—É, —à–≤–∏–¥–∫—ñ—Å—Ç—å –∞–±–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Å–∞–∂–∏—Ä—ñ–≤.\n" ;
		}
	}


 private:
 int passengerCount;
};

int main() {
	double mass, fuel, speed, altitude;
	int passengers;

	cout << "–í–≤–µ–¥—ñ—Ç—å –º–∞—Å—É üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞:\n";
	cin >> mass;

	cout << "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–ª–∏–≤–∞ üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞:\n";
	cin >> fuel;

	cout << "–í–≤–µ–¥—ñ—Ç—å —à–≤–∏–¥–∫—ñ—Å—Ç—åüõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞:\n";
	cin >> speed;

	cout << "–í–≤–µ–¥—ñ—Ç—å –≤–∏—Å–æ—Ç—É üõ´–†–µ–∞–∫—Ç—ñ–≤–Ω–æ–≥–æ –ª—ñ—Ç–∞–∫–∞:\n";
	cin >> altitude;

	cout << "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Å–∞–∂–∏—Ä—ñ–≤:\n";
	cin >> passengers;

	Boeing747 boeing(mass, fuel, speed, altitude, passengers);
	boeing.Start();

	return 0;
}